/* Course enrollments by TERM
List all the course enrollments for a designated term. Optionaly, specify a transaction date.
BASED ON: SR_ENROLLMENTS
*/

use [Student_Records_copy];

select 
*
from (

	select SR_ENROLLMENTS.ENROLLMENT_ID,
	SR_ENROLLMENTS.PERSON_ID,
	SR_ENROLLMENTS.SECTION_ID,
	SR_ENROLLMENTS.DATE_CREATED,
	dbo.ufnGetSectionDateByType(SR_SECTIONS.SECTION_ID, 4) as DATE_CENSUS,
	ROWID = row_number() over (partition by SR_ENROLLMENTS.PERSON_ID,SR_SECTIONS.SECTION_ID
						 order by SR_ENROLLMENTS.DATE_CREATED desc)
	from SR_ENROLLMENTS 
	inner Join SR_SECTIONS on SR_ENROLLMENTS.SECTION_ID = SR_SECTIONS.SECTION_ID
	inner Join SR_COURSE_VERSIONS on SR_SECTIONS.COURSE_VERSION_ID = SR_COURSE_VERSIONS.COURSE_VERSION_ID  
	where 
		--SR_ENROLLMENTS.DATE_CREATED <= '09/11/2017' and                     /* modify the AS-OF-DATE here */
		SR_SECTIONS.TERM_ID = 20177 and                                       /* Modify the TERM_ID here */
		SR_ENROLLMENTS.ADD_DROP_STATUS not in ('5','28') and
		COURSE_DISCIPLINE_NBR <> 'COUN 901'
) A inner join
SR_ENROLLMENTS on A.ENROLLMENT_ID = SR_ENROLLMENTS.ENROLLMENT_ID 
inner join
SR_SECTIONS on SR_ENROLLMENTS.SECTION_ID = SR_SECTIONS.SECTION_ID 
inner join
SR_COURSE_VERSIONS on SR_SECTIONS.COURSE_VERSION_ID = SR_COURSE_VERSIONS.COURSE_VERSION_ID 
where A.ROWID = 1
and SR_ENROLLMENTS.ADD_DROP_STATUS in (1,2,6) 
or (SR_ENROLLMENTS.ADD_DROP_STATUS not in (1,2,6) and SR_ENROLLMENTS.DATE_TRANSACTION >= DATE_CENSUS)
order by A.PERSON_ID;